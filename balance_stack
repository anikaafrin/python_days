class balance_stack:
    def __init__(self):
        self.items = [] 
    def push(self, item):
        self.items.append(item)
    def pop(self):
        return self.items.pop() 
    def is_empty(self):
        return self.items == [] 



def match_symbol(symbol_str):
    symbol_pairs={
        '(': ')', '[':']','{':'}',
    }
    openers = symbol_pairs.keys() 
    my_stack = balance_stack()
    index=0
    while(index<len(symbol_str)):
        symbol = symbol_str[index] 
        if symbol in openers:
            my_stack.push(symbol) 
        else: 
            if my_stack.is_empty():
                return False
            else:
                top_item = my_stack.pop() 
                if symbol != symbol_pairs[top_item] :
                    return False
        index=index+1 
    if my_stack.is_empty():
        return True 
    return False 
print(match_symbol('([{}])'))   

            
            
            
